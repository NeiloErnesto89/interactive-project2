{"changed":true,"filter":false,"title":"pollution.js","tooltip":"/js/pollution.js","value":"queue()\n    .defer(d3.json, \"data/New_EU_28.json\")\n    .await(makeGraphs);\n\n\nfunction makeGraphs(error, euData) { \n\n\n    var ndx = crossfilter(euData);\n\n\n    // charts\n\n    show_eu_population(ndx);\n\n    show_eu_emission_total(ndx);\n\n    show_country_selector(ndx);\n\n    show_eu_barchart(ndx);\n\n    show_death_v_gdp_correlation(ndx);\n\n    show_country_emission_pie(ndx);\n\n    show_yearly_plastic_waste_pie(ndx);\n\n    show_plastic_waste_dim(ndx);\n\n    show_waste_gdp_line(ndx);\n    \n    show_eu_per_cap_barchart(ndx); \n\n\n    dc.renderAll();\n\n}\n\n\n\nfunction show_eu_population(ndx) {\n    var populationGroup = ndx.groupAll().reduceSum(function(d) {\n        return d.Population;\n    });\n    var populationNum = dc.numberDisplay(\"#eu-population\");\n\n    populationNum\n        .group(populationGroup)\n        .valueAccessor(function(d) {\n            return d;\n        });\n}\n\nfunction show_eu_emission_total(ndx) {\n    var emissionGroup = ndx.groupAll().reduceSum(function(d) {\n        return d.EmissionsC;\n    });\n    var totalEmissNum = dc.numberDisplay(\"#eu-total_emission\");\n    var numFormat = d3.format(\",.2r\");\n\n    totalEmissNum\n        .formatNumber(numFormat)\n        .group(emissionGroup)\n        .valueAccessor(function(d) {\n            return d;\n        });\n}\n\n/*\n// ==== % population born abroad number display \nfunction show_total_deaths(ndx, total_deaths_percent) {\n\n\tvar total_deaths = dc.numberDisplay(\"#total-deaths\");\n\n\ttotal_deaths\n\t\t.formatNumber(d3.format(\".0%\")) // format number as percentage\n\t\t.group(total_deaths) // group brought in from makeCharts()\n\t\t.valueAccessor(function(d) {\n\t\t\treturn d.average / 100; // divide by 100 to allow % number format\n\t\t});\n} */\n\n\n\nfunction show_country_selector(ndx) {\n    dim = ndx.dimension(dc.pluck(\"Country\"));\n    group = dim.group()\n\n    dc.selectMenu(\"#country-selector\")\n        .dimension(dim)\n        .group(group);\n}\n\nfunction show_eu_barchart(ndx) {\n    var country_dim = ndx.dimension(dc.pluck(\"Country\"));\n    var total_emissions = country_dim.group().reduceSum(dc.pluck('EmissionsC'));\n\n    var countryColors = d3.scale.ordinal()\n        .domain([\"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Estonia\", \"Finland\", \"France\", \"Germany\", \"Greece\", \"Hungary\", \"Ireland\", \"Italy\", \"Latvia\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\", \"Poland\", \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\", \"Spain\", \"Sweden\", \"United Kingdom\"])\n        .range([\"Pink\", \"Green\", \"Orange\", \"Yellow\", \"Brown\", \"Purple\", \"Orange\", \"Coffee\", \"Coral\", \"Emerald\", \"Gold\", \"OrangeRed\", \"Lemon\", \"FireBrick\", \"Blue\", \"Violet\", \"#4B15EE\", \"Crimson\", \"Jade\", \"Indigo\", \"Lime\", \"Magenta\", \"Olive\", \"Pear\", \"Peach\", \"Plum\", \"Ruby\", \"Salmon\"]);\n\n\n    dc.barChart(\"#eu-pollution-chart\")\n        .width(500)\n        .height(550)\n        .margins({ top: 20, right: 40, bottom: 50, left: 40 })\n        .dimension(country_dim)\n        .group(total_emissions)\n        .transitionDuration(500)\n        .x(d3.scale.ordinal())\n        .xUnits(dc.units.ordinal)\n        .colors(countryColors)\n        .colorAccessor(function(d) {\n            return d.key[0];\n        })\n        .xAxisLabel(\"Countries\")\n        .yAxisLabel(\"Co2 Emission Level (million tonnes)\")\n        .yAxis().ticks(7);\n\n\n}\n\n\n\nfunction show_eu_per_cap_barchart(ndx) {\n    var nation_dim = ndx.dimension(dc.pluck(\"Country\"));\n    var total_emissions_per = nation_dim.group().reduceSum(dc.pluck('EmissionsPerCap'));\n\n    var nationColors = d3.scale.ordinal()\n        .domain([\"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Estonia\", \"Finland\", \"France\", \"Germany\", \"Greece\", \"Hungary\", \"Ireland\", \"Italy\", \"Latvia\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\", \"Poland\", \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\", \"Spain\", \"Sweden\", \"United Kingdom\"])\n        .range([\"red\", \"pink\", \"blue\", \"green\", \"Brown\", \"Purple\", \"Orange\", \"yellow\", \"Coral\", \"Emerald\", \"Gold\", \"Black\", \"Lemon\", \"Green\", \"Blue\", \"Violet\", \"#4B15EE\", \"Crimson\", \"Jade\", \"Indigo\", \"Lime\", \"Magenta\", \"Olive\", \"Pear\", \"Peach\", \"Plum\", \"Ruby\", \"Salmon\"]);\n\n\n    dc.barChart(\"#eu-per_cap-chart\")\n        .width(500)\n        .height(450)\n        .margins({ top: 20, right: 30, bottom: 50, left: 30 })\n        .dimension(nation_dim)\n        .group(total_emissions_per)\n        .transitionDuration(500)\n        .x(d3.scale.ordinal())\n        .xUnits(dc.units.ordinal)\n        .colors(nationColors)\n        .colorAccessor(function(d) {\n            return d.key[0];\n        })\n        .xAxisLabel(\"Countries\")\n        .yAxisLabel(\"Per Capita Co2 Emissions (tonnes)\")\n        .yAxis().ticks(7);\n\n\n}\n\n\n\n\nfunction show_death_v_gdp_correlation(ndx) {\n\n    var nationColors = d3.scale.ordinal()\n        .domain([\"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Estonia\", \"Finland\", \"France\", \"Germany\", \"Greece\", \"Hungary\", \"Ireland\", \"Italy\", \"Latvia\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\", \"Poland\", \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\", \"Spain\", \"Sweden\", \"United Kingdom\"])\n        .range([\"Red\", \"Yellow\", \"Pink\", \"Grey\", \"Brown\", \"Purple\", \"Orange\", \"Coffee\", \"Coral\", \"Emerald\", \"Gold\", \"Black\", \"Lemon\", \"Green\", \"Blue\", \"Violet\", \"Cyan\", \"Crimson\", \"Jade\", \"Indigo\", \"Lime\", \"Magenta\", \"Olive\", \"Pear\", \"Peach\", \"Plum\", \"Ruby\", \"Salmon\"]);\n\n    var gdpDim = ndx.dimension(dc.pluck(\"GDP\")) /* on x axis*/\n    var deathCoDim = ndx.dimension(function(d) {\n        return [d.GDP, d.DeathsPer, d.Country] /*first part on x axis*/\n    });\n    var gdpAndDeathGroup = deathCoDim.group();\n\n    var minGdpDeathRate = gdpDim.bottom(1)[0].GDP;\n    var maxGdpDeathRate = gdpDim.top(1)[0].GDP;\n\n\n    dc.scatterPlot(\"#death-v-gdp-plot\")\n        .width(600)\n        .height(400)\n        /* height(window.innerHeight - 300)\n         .width(window.innerWidth - 65 % window)*/\n        .x(d3.scale.linear().domain([minGdpDeathRate, maxGdpDeathRate])) /* as gdp is numerical i.e. 10 is more than 9 */\n        .brushOn(false)\n        .symbolSize(6)\n        .clipPadding(10)\n        .xAxisLabel(\"GDP (â‚¬)\")\n        .yAxisLabel(\"Deaths\")\n        .title(function(d) {\n            return \"The average death rate due to air pollution is \" + d.key[1] + \" per 100,000 in \" + d.key[2];\n        })\n        .colorAccessor(function(d) {\n            return d.key[2];\n        })\n        .colors(nationColors)\n        .dimension(deathCoDim)\n        .group(gdpAndDeathGroup)\n        .margins({ top: 10, right: 50, bottom: 50, left: 50 })\n        .xAxis().ticks(5);\n\n\n}\n\n\nfunction show_country_emission_pie(ndx) {\n    var area_dim = ndx.dimension(dc.pluck('Country'));\n    var total_emissions_pie = area_dim.group().reduceSum(dc.pluck('EmissionsC'));\n\n    dc.pieChart(\"#country-pie-chart\")\n        .width(450)\n        .height(500)\n        .innerRadius(50)\n        .externalRadiusPadding(45)\n        .transitionDuration(1500)\n        .dimension(area_dim)\n        .group(total_emissions_pie)\n        .externalLabels(20)\n        .drawPaths(true)\n        .minAngleForLabel(0)\n        .cap(5)\n        .legend(\n            dc\n            .legend()\n            .x(395)\n            .y(20)\n            .horizontal(false)\n            .itemHeight(5)\n            .gap(5)\n        );\n    /* .legend(dc.legend().x(270).y(0).itemHeight(8).gap(5));*/\n}\n\n\nfunction show_yearly_plastic_waste_pie(ndx) {\n    var area_dim = ndx.dimension(dc.pluck('Country'));\n    var yearly_plastic_pie = area_dim.group().reduceSum(dc.pluck('PlasticWasteYearly'));\n    /*var pieNumFormat = d3.format(\".0%\");*/\n\n        \n\n    dc.pieChart(\"#yearly-plastic-pie\")\n        .width(425)\n        .height(500)\n      /*  .formatNumber(pieNumFormat) */\n        .innerRadius(40)\n        .externalRadiusPadding(45)\n        .transitionDuration(1500)\n        .dimension(area_dim)\n        .group(yearly_plastic_pie)\n        .externalLabels(20)\n        .drawPaths(true)\n        .minAngleForLabel(0)\n        .cap(9)\n        .legend(\n            dc\n            .legend()\n            .x(365)\n            .y(15)\n            .horizontal(false)\n            .itemHeight(5)\n            .gap(5)\n        );\n}\n\n\nfunction show_plastic_waste_dim(ndx) {\n\n    var plastic_dimension = ndx.dimension(function(d) {\n        if (d.PlasticWasteYearly > 50)\n            return \"+ 50kgs per person\";\n        else\n            return \"- 50kgs per person\"\n    });\n\n    var plastic_group = plastic_dimension.group();\n\n\n    dc.pieChart('#yearly-plastic-dim')\n        .height(380)\n        .width(350)\n        .radius(110)\n        .dimension(plastic_dimension)\n        .group(plastic_group);\n\n}\n\nfunction show_waste_gdp_line(ndx) {\n\n\n    var gdp_dim = ndx.dimension(dc.pluck('GDP'));\n    var total_plastic_v_gdp = gdp_dim.group().reduceSum(dc.pluck('PlasticWasteYearly'));\n    var minPlasticGDP = gdp_dim.bottom(1)[0].GDP;\n    var maxPlasticGDP = gdp_dim.top(1)[0].GDP;\n\n    dc.lineChart(\"#waste-gdp-line\")\n        .width(600)\n        .height(300)\n        .margins({ top: 10, right: 50, bottom: 40, left: 50 })\n        .dimension(gdp_dim)\n        .group(total_plastic_v_gdp)\n        .transitionDuration(500)\n        .x(d3.scale.linear().domain([minPlasticGDP, maxPlasticGDP]))\n        .elasticY(false)\n        .elasticX(false)\n        .xAxisLabel(\"GDP  (â‚¬)\")\n        .yAxisLabel(\"Yearly Plastic Generation per Capita (kg)\")\n        .yAxis().ticks(5);\n}\n","undoManager":{"mark":4,"position":5,"stack":[[{"start":{"row":307,"column":0},"end":{"row":365,"column":2},"action":"remove","lines":["function show_rank_distribution(ndx) {","    ","","function rankByGender (dimension, rank) {","        return dimension.group().reduce(","            function (p, v) {","                p.total++;","                if(v.rank == rank) {","                    p.match++;","                }","                return p;","            },","            function (p, v) {","                p.total--;","                if(v.rank == rank) {","                    p.match--;","                }","                return p;","            },","            function () {","                return {total: 0, match: 0};","            }","        );","    }","    ","    ","        ","        ","","    var  dim = ndx.dimension(dc.pluck('Country'));","    var profByGender = rankByGender(dim, \"Prof\");","    var asstProfByGender = rankByGender(dim, \"AsstProf\");","    var assocProfByGender = rankByGender(dim, \"AssocProf\");","    ","    //  console.log(profByGender.all());","    ","    dc.barChart(\"#rank-distribution\")","        .width(350)","        .height(250)","        .dimension(dim)","        .group(profByGender, \"Prof\")","        .stack(asstProfByGender, \"Asst Prof\")","        .stack(assocProfByGender, \"Assoc Prof\")","        .valueAccessor(function(d) {","            if(d.value.total > 0) {","                return (d.value.match / d.value.total) * 100; // to get % of match ","            } else {","                return 0;","            }","        })","        .x(d3.scale.ordinal())","        .xUnits(dc.units.ordinal)","        .xAxisLabel(\"Gender\")","        .legend(dc.legend().x(320).y(20).itemHeight(15).gap(5))","        .margins({top: 10, right: 100, bottom: 30, left: 30});","    ","}","","*/"],"id":188},{"start":{"row":306,"column":2},"end":{"row":307,"column":0},"action":"remove","lines":["",""]},{"start":{"row":306,"column":1},"end":{"row":306,"column":2},"action":"remove","lines":["*"]},{"start":{"row":306,"column":0},"end":{"row":306,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":18,"column":3},"end":{"row":18,"column":54},"action":"remove","lines":[" /* show_total_deaths(ndx, total_deaths_percent);*/"],"id":189}],[{"start":{"row":10,"column":4},"end":{"row":10,"column":66},"action":"remove","lines":["/* var total_deaths_percent = reduceAvg(ndx, \"DeathsTotal\");*/"],"id":190},{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"remove","lines":["    "]},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":5,"column":37},"end":{"row":5,"column":66},"action":"remove","lines":["/*refering to line 4 index */"],"id":191}],[{"start":{"row":17,"column":2},"end":{"row":17,"column":3},"action":"remove","lines":[" "],"id":192},{"start":{"row":17,"column":1},"end":{"row":17,"column":2},"action":"remove","lines":[" "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":1},"action":"remove","lines":[" "]},{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":193}]]},"ace":{"folds":[],"scrolltop":540,"scrollleft":0,"selection":{"start":{"row":16,"column":0},"end":{"row":16,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":true,"wrapToView":true},"firstLineState":{"row":32,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1567000596349}